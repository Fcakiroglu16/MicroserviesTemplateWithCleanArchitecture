version: '3.4'

services:
  auth.api:
    image: auth.api:${version}
    build:
      context: .
      dockerfile: Auth.API/Dockerfile
  communication.api:
    image: communication.api:${version}
    build:
      context: .
      dockerfile: Communication.API/Dockerfile
  monetization.api:
    image: monetization.api:${version}
    build:
      context: .
      dockerfile: Monetization.API/Dockerfile
  notification.api:
    image: notification.api:${version}
    build:
      context: .
      dockerfile: Notification.API/Dockerfile 
  operation.api:
    image: operation.api:${version}
    build:
      context: .
      dockerfile: Operation.API/Dockerfile
  usermanagment.api:
    image: usermanagment.api:${version}
    build:
      context: .
      dockerfile: UserManagment.API/Dockerfile
  redis:
   image: redis:7.0
  rabbitmq:
   image: rabbitmq:3.12.2-management
  otel-collector:
   image: otel/opentelemetry-collector-contrib:0.85.0
  certificate-setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION} 
  apm-server:
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION}
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
  prometheus:
   image: prom/prometheus:v2.37.9
  auth.db:
    image: postgres:16
  communication.db:
    image: mongo:latest
  monetization.db:
    image: mongo:latest
  notification.db:
    image: mongo:latest
  operation.db:
    image: mongo:latest
  usermanagment.db:
    image: mongo:latest
volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local
  rabbitmqdata_etc :
    driver: local
  rabbitmqdata_data :
    driver: local
  rabbitmqdata_log :
    driver: local
  auth_db_data:
    driver: local
  communication.db_data:
    driver: local
  monetization.db_data:
    driver: local
  notification.db_data:
    driver: local
  operation.db_data:
    driver: local
  usermanagment.db_data:
    driver: local
  
  


